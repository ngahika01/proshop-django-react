{"version":3,"sources":["components/Footer.js","constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","constants/productConstants.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["Footer","Container","Row","Col","md","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","Button","variant","Header","useSelector","state","useDispatch","Navbar","bg","expand","sticky","collapseOnSelect","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Rating","text","color","style","Product","product","Card","maxHeight","minHeight","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","pages","page","split","Pagination","Array","keys","map","x","active","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","listProducts","listProductDetails","ProductCarousel","productTopRated","error","loading","products","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","productList","search","sm","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","loadingProductReview","errorProductReview","successProductReview","success","params","ListGroup","description","countInStock","xs","disabled","reviews","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","Number","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","required","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","put","updateUserProfile","Table","striped","responsive","order","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","orderCreate","itemsPrice","shippingPrice","taxPrice","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","userUpdate","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","orderList","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d268228b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Container,Row,Col } from 'react-bootstrap'\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12 } className=\"text-center py-3\">\r\n                        Copy &copy; mykesoftware\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n           \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {logout} from \"../actions/userActions\"\r\nimport SearchBox from './SearchBox'\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span> {text && text} </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n","import React, { Profiler } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\nimport { Link } from 'react-router-dom';\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card\r\n      className='my-3 p-3 rounded shadow'\r\n      style={{\r\n        maxHeight: '400px',\r\n        minHeight: '400px',\r\n      }}\r\n    >\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img style={{ maxHeight: '200px' }} src={product.image} />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong> {product.name} </strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as='div'>\r\n          <div className='my-3'>\r\n            {product.rating} from {product.numReviews} reviews\r\n            <Rating\r\n              value={product.rating}\r\n              text={`${product.numReviews} reviews`}\r\n              color={`#f8e825`}\r\n            />\r\n          </div>\r\n        </Card.Text>\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        height: '100px',\r\n        width: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\n","import axios from 'axios';\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants';\r\n\r\nexport const listProducts =\r\n  (keyword = '') =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n      const { data } = await axios.get(`/api/products${keyword}`);\r\n\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top/`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/products/delete/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products/create/`, {}, config);\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/update/${product._id}/`,\r\n      product,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/products/${productId}/reviews/`,\r\n        review,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\nfunction ProductCarousel() {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { error, loading, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel.caption'>\r\n              <h4>\r\n                {product.name} (${product.price})\r\n              </h4>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default ProductCarousel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nfunction HomeScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { error, loading, products, page, pages } = productList;\r\n\r\n  let keyword = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n  return (\r\n    <div  className=\"mt-3\">\r\n      {!keyword && <ProductCarousel />}\r\n\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate page={page} pages={pages} keyword={keyword} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Button,\r\n  Card,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\n\r\nfunction ProductScreen({ match, history }) {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n    success: successProductReview,\r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0);\r\n      setComment('');\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                    color={'#f8e825'}\r\n                  />\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col xs='auto' className='my-1'>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      disabled={product.countInStock == 0}\r\n                      type='button'\r\n                    >\r\n                      Add to Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6}>\r\n              <h4>Reviews</h4>\r\n              {product.reviews.length === 0 && (\r\n                <Message variant='info'>No Reviews</Message>\r\n              )}\r\n\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} color='#f8e825' />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n\r\n                <ListGroup.Item>\r\n                  <h4>Write a review</h4>\r\n\r\n                  {loadingProductReview && <Loader />}\r\n                  {successProductReview && (\r\n                    <Message variant='success'>Review Submitted</Message>\r\n                  )}\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Review</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='5'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type='submit'\r\n                        variant='primary'\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message variant='info'>\r\n                      Please <Link to='/login'>login</Link> to write a review\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductScreen;\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col>{children}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\nimport { listMyOrders } from '../actions/orderActions';\r\n\r\nfunction ProfileScreen({ history }) {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n   const orderListMy = useSelector((state) => state.orderListMy);\r\n   const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user || !user.name || success || userInfo._id !== user._id) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails('profile'));\r\n         dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password != confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n        })\r\n      );\r\n      setMessage('');\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='email'\r\n              placeholder='Enter Email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter Password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='passwordConfirm'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Paid</th>\r\n                <th>Delivered</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm'>Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Login</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Login</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useState, useEffect } from 'react';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, error, success } = orderCreate;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    .toFixed(2);\r\n  cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\r\n  cart.taxPrice = Number(0.082 * cart.itemsPrice).toFixed(2);\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }else{\r\n        if (!cart.paymentMethod) {\r\n            history.push('/payment');\r\n          }\r\n    }\r\n  }, [success, history]);\r\n\r\n  const placeOrder = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                {'  '}\r\n                {cart.shippingAddress.postalCode},{'  '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message variant='info'>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrder}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions';\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nfunction OrderScreen({ match, history }) {\r\n  const orderId = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, error, loading } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading && !error) {\r\n    order.itemsPrice = order.orderItems\r\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n      .toFixed(2);\r\n  }\r\n\r\n  const addPayPalScript = () => {\r\n    const script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.src =\r\n      'https://www.paypal.com/sdk/js?client-id=AbW_FRRc5G5xhlccBpPZyD95PXavhghNmrty0w4mYNlBWqlUPUL_W1q_vGzfFDFK4tjJwO_H2r8EHAJ0';\r\n    script.async = true;\r\n    script.onload = () => {\r\n      setSdkReady(true);\r\n    };\r\n    document.body.appendChild(script);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n\r\n    if (\r\n      !order ||\r\n      successPay ||\r\n      order._id !== Number(orderId) ||\r\n      successDeliver\r\n    ) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay, successDeliver]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <div>\r\n      <h1>Order: {order.Id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                {'  '}\r\n                {order.shippingAddress.postalCode},{'  '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='warning'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='warning'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message variant='info'>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n            {loadingDeliver && <Loader />}\r\n            {userInfo &&\r\n              userInfo.isAdmin &&\r\n              order.isPaid &&\r\n              !order.isDelivered && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    type='button'\r\n                    className='btn btn-block'\r\n                    onClick={deliverHandler}\r\n                  >\r\n                    Mark As Delivered\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nfunction UserListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this user?')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push('/admin/userlist');\r\n    } else {\r\n      if (!user.name || user._id !== Number(userId)) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, userId, successUpdate, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/admin/userlist'>Go Back</Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter Email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, pages, page } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  let keyword = history.location.search;\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login');\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts(keyword));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    keyword,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this product?')) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listOrders } from '../actions/orderActions';\r\n\r\nfunction OrderListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>Total</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderListScreen;\r\n","import { Container } from 'react-bootstrap';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className='py '>\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        page: action.payload.page,\r\n        pages: action.payload.pages,\r\n      };\r\n\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] };\r\n\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_MY_RESET:\r\n      return {\r\n        orders: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./bootstrap.min.css\"\nimport {Provider }from \"react-redux\"\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}